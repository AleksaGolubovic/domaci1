<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Page Title</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #1f1f1f; /* Dark background */
            color: #ffffff; /* White text */
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
            height: 100vh;
            position: relative;
        }

        h1 {
            color: #d91c1c; /* Dark red heading - color similar to Redis logo */
            text-align: center;
            margin-bottom: 20px;
        }

        #messages-container {
            flex: 9;
            width: 100%;
            max-width: 400px;
            overflow-y: auto;
        }

        #messages {
            background-color: #2e2e2e; /* Dark gray messages background */
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(255, 255, 255, 0.1); /* Slightly transparent white shadow */
            width: 100%;
            transition: box-shadow 0.3s ease-in-out;
            scrollbar-width: thin; /* Firefox */
            scrollbar-color: transparent transparent; /* Firefox */
        }

        #messages::-webkit-scrollbar {
            width: 6px; /* WebKit */
        }

        #messages::-webkit-scrollbar-thumb {
            background-color: transparent; /* WebKit */
        }

        .message {
            font-size: 18px;
            margin-bottom: 10px;
        }

        .username {
            font-size: 16px;
            font-weight: bold;
            color: #5e5e5e; /* Medium gray username */
        }

        .message span {
            margin-right: 5px; /* Add space after : in each message */
        }

        #input-container {
            flex: 1;
            width: 100%;
            max-width: 400px;
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: space-between;
            padding: 10px;
        }

        input {
            flex: 8;
            width: calc(100% - 20px);
            padding: 10px;
            box-sizing: border-box;
            border: 1px solid #5e5e5e; /* Medium gray border */
            border-radius: 5px;
            font-size: 16px;
            transition: border-color 0.3s ease-in-out;
            color: #ffffff; /* White text */
            background-color: #2e2e2e; /* Dark gray input background */
        }

        input:focus {
            border-color: #9acffa;
        }

        button {
            flex: 2;
            background-color: #5e5e5e; /* Medium gray button - a more pale color */
            color: #ffffff; /* White text */
            padding: 12px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s ease-in-out;
        }

        button:hover {
            background-color: #7a7a7a; /* Darker medium gray hover color */
        }

        #joined {
            margin-top: 20px;
            text-align: center;
            color: #d9d9d9; /* Light gray joined text */
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Add animation to messages */
        #messages {
            animation: fadeIn 0.5s ease-in-out;
        }
    </style>
</head>
<body>
    <h1>Redis Chat</h1>

    <div id="messages-container">
        <div id="messages"></div>
    </div>

    <div id="input-container">
        <input id="message" type="text" name="message" placeholder="Message" />
        <button onclick="emitData()">Send</button>
    </div>

    <div id="joined"></div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io("http://localhost:5000");

        function emitData() {
            const message = document.querySelector("#message").value;
            if (message.length > 0) {
                socket.emit("message", { message, from: "<%= username %>" });
                document.querySelector("#message").value = ''; // Clear the input after sending
            }
        }

        function handleKeyPress(event) {
            if (event.key === "Enter") {
                emitData();
            }
        }

        // Add event listener for "Enter" key press
        document.getElementById("message").addEventListener("keydown", handleKeyPress);

        socket.on("message", ({ from, message }) => {
            const messageElement = document.createElement("div");
            messageElement.classList.add("message");

            const usernameElement = document.createElement("span");
            usernameElement.classList.add("username");
            usernameElement.innerText = `${from}: `;
            messageElement.appendChild(usernameElement);

            const messageTextElement = document.createElement("span");
            messageTextElement.innerText = message;
            messageElement.appendChild(messageTextElement);

            document.querySelector("#messages").appendChild(messageElement);

            // Scroll to the bottom when a new message arrives
            document.getElementById("messages-container").scrollTop = document.getElementById("messages-container").scrollHeight;
        });

        socket.on("joined", username => {
            const messageElement = document.createElement("div");
            messageElement.classList.add("message");

            const messageTextElement = document.createElement("span");
            messageTextElement.innerText = `${username} has joined`;
            messageElement.appendChild(messageTextElement);

            document.querySelector("#messages").appendChild(messageElement);

            // Scroll to the bottom when a new message arrives
            document.getElementById("messages-container").scrollTop = document.getElementById("messages-container").scrollHeight;
        });
    </script>
</body>
</html>
